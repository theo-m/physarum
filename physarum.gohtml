<html lang="en">
  <head>
    <title>Physarum</title>
    <script
      src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
      integrity="sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs="
      crossorigin="anonymous"
    ></script>
    <script src="/public/bundle.js"></script>
  </head>
  <link
    rel="stylesheet"
    href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"
  />
  <body class="mx-auto h-full px-24">
    <div class="flex flex-col flex-fill pb-24 space-y-4">
      <div class="font-medium bg-grey-100 py-4 px-2 border-b">Physarum</div>
      <div class="flex justify-between">
        <form id="config" class="flex flex-col">
          <label class="flex justify-between items-center p-1">
            <span>width</span>
            <input type="number" name="width" placeholder="width" value="512" />
          </label>
          <label class="flex justify-between items-center p-1">
            <span>height</span>
            <input
              type="number"
              name="height"
              placeholder="height"
              value="512"
            />
          </label>
          <label class="flex justify-between items-center p-1">
            <span>iterations</span>
            <input
              type="number"
              name="iterations"
              placeholder="iterations"
              value="10"
            />
          </label>
          <label class="flex justify-between items-center p-1">
            <span>blurRadius</span>
            <input
              type="number"
              name="blurRadius"
              placeholder="blurRadius"
              value="2"
            />
          </label>
          <label class="flex justify-between items-center p-1">
            <span>blurPasses</span>
            <input
              type="number"
              name="blurPasses"
              placeholder="blurPasses"
              value="1"
            />
          </label>
          <label class="flex justify-between items-center p-1">
            <span>num particles (2^)</span>
            <div class="flex items-center space-x-2">
              <input
                type="range"
                name="particles"
                placeholder="particles"
                min="10"
                value="16"
                max="20"
                onchange="$('#pf').text(this.value)"
              />
              <span id="pf" class="text-gray-500">16</span>
            </div>
          </label>
          <label class="flex justify-between items-center p-1">
            <span>num grids </span>
            <div class="flex items-center space-x-2">
              <input
                type="range"
                name="numGrids"
                placeholder="4"
                min="2"
                value="4"
                max="5"
                onchange="$('#gridsf').text(this.value)"
              />
              <span id="gridsf" class="text-gray-500">4</span>
            </div>
          </label>
          <label class="flex justify-between items-center p-1">
            <span>zoomFactor</span>
            <div class="flex items-center space-x-2">
              <input
                type="range"
                name="zoomFactor"
                placeholder="zoomFactor"
                min="0.25"
                value="1"
                max="2"
                step="0.05"
                onchange="$('#zoomf').text(this.value)"
              />
              <span id="zoomf" class="text-gray-500">1</span>
            </div>
          </label>
          <input type="submit" />
        </form>
        <div class="flex flex-col">
          <span id="step">0/0</span>
          <img id="lastImg" class="shadow-lg" src="" alt="last image" />
          <video id="vid" controls>
            <source id="videoSource" src="" type="video/mp4" />
          </video>
        </div>
      </div>
      <div id="websockstatus" class="px-4 py-2">Websocket status</div>
    </div>
    <script>
      const form = $("#config");
      const status = $("#websockstatus");
      const video = $("#vid");
      const videoSrc = $("#videoSource");
      const img = $("#lastImg");
      const step = $("#step");
      img.hide();
      step.hide();
      video.hide();

      const ws = new WebSocket("ws://" + window.location.host + "/ws");
      ws.onopen = () => {
        status.text("open").show();
        status.addClass("bg-green-400");
      };
      ws.onclose = () => {
        status.text("closed").show();
        status.removeClass("bg-green-400");
        status.addClass("bg-red-400");
      };
      ws.onmessage = ({ data }) => {
        data.arrayBuffer().then((bytes) => {
          const ev = proto.physarium.Event.deserializeBinary(bytes);
          switch (ev.getContentCase()) {
            case proto.physarium.Event.ContentCase.PICTURE:
              const imgBlob = new Blob([ev.getPicture()], {
                type: "image/png",
              });
              const imgUrl = URL.createObjectURL(imgBlob);
              img.show();
              img.attr("src", imgUrl);
              break;
            case proto.physarium.Event.ContentCase.VIDEO:
              const vidBlob = new Blob([ev.getVideo()], { type: "video/mp4" });
              const vidUrl = URL.createObjectURL(vidBlob);
              videoSrc.attr("src", vidUrl);
              video[0].load();
              video.show();
              img.hide();
              step.hide();
              break;
            case proto.physarium.Event.ContentCase.STEP:
              step.text(ev.getStep());
              step.show();
              break;
            case proto.physarium.Event.ContentCase.CONTENT_NOT_SET:
              step.text("erreur");
              step.show();
              break;
          }
        });
      };

      form.submit((ev) => {
        ev.preventDefault();
        const cfg = new proto.physarium.Config();
        cfg.setWidth(parseInt($("input[name=width]").val()));
        cfg.setHeight(parseInt($("input[name=height]").val()));
        cfg.setParticles(2 ** parseInt($("input[name=particles]").val()));
        cfg.setNumGrids(parseInt($("input[name=numGrids]").val()));
        cfg.setIterations(parseInt($("input[name=iterations]").val()));
        cfg.setBlurRadius(parseInt($("input[name=blurRadius]").val()));
        cfg.setBlurPasses(parseInt($("input[name=blurPasses]").val()));
        cfg.setZoomFactor(parseFloat($("input[name=zoomFactor]").val()));
        ws.send(cfg.serializeBinary());
        video.hide();
      });
    </script>
  </body>
</html>
